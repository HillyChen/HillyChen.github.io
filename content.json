{"meta":{"title":"草泥上的蚂蚁","subtitle":"知无不言  言无不尽","description":null,"author":"sunniberg","url":"https://git.oschina.net/chenxushan/chenxushan.git"},"pages":[{"title":"about","date":"2017-03-12T06:57:46.000Z","updated":"2017-03-12T06:58:44.000Z","comments":true,"path":"about/index.html","permalink":"https://git.oschina.net/chenxushan/chenxushan.git/about/index.html","excerpt":"","text":""},{"title":"movie&music","date":"2017-03-12T14:33:23.000Z","updated":"2017-04-09T07:39:52.000Z","comments":true,"path":"movie-music/index.html","permalink":"https://git.oschina.net/chenxushan/chenxushan.git/movie-music/index.html","excerpt":"","text":"爱好 鄙人喜欢听音乐看电影，所以平时作为兴趣维护着一个电影音乐的公众号，喜欢电影音乐的朋友欢迎关注，知无不尽，言无不尽；公众号：music_movie_love 文章标题 阅读 我所向往的生活 点击阅读 God Father 点击阅读 一首《弹棉花》勾起一部电影的回忆 点击阅读 经典永恒 点击阅读 关乎信仰 点击阅读 《极限特工3》实力派加偶像派齐飞！ 点击阅读 蝙蝠侠： 致命玩笑 点击阅读 两位先生 点击阅读 平凡人的传奇故事 点击阅读 影史上神奇的1994年，经典无数，百花齐放！ 点击阅读 西班牙恐怖片《吾栖之肤》！ 点击阅读 致敬经典的演唱会live(beyond&amp;&amp;The Beatles) 点击阅读 佳片推荐：《机械姬》（2015） 点击阅读 比较虐心的9部电影 点击阅读 《老九门》人物关系介绍 点击阅读 启示录 点击阅读 好莱坞大片特效前后对比，考验演员演技！ 点击阅读 两个版本的《演员》，您喜欢哪个版本？ 点击阅读 佳片推荐: 七磅 （Seven Pounds） 点击阅读 电影常识系列(一) 点击阅读 人类的第一次自拍照片原来是这样！ 点击阅读 史上最具颠覆力的电视剧 点击阅读 法兰西玫瑰–苏菲玛索 点击阅读 南京人配音国外影视作品，连科比都爆笑！ 点击阅读 史上最强悍点球大战！ 点击阅读 Transformers:《变形金刚》——钢铁摇滚的饕餮盛宴 点击阅读 周杰伦和他背后的男人们！ 点击阅读 春风十里 点击阅读 中国明星试镜《权利的游戏》！小恶魔亮了！ 点击阅读 从暴雪资料片CG了解你所不知道的魔兽世界（一）——经典旧世 点击阅读 李小龙好莱坞试镜时的珍贵视频，不愧是一代宗师 点击阅读 《余罪》里面最搞笑的一段视频 点击阅读 You are not alone 点击阅读 我干脆自己下车，指挥乐坛的交通 点击阅读 美的不是下雨天，而是与你躲过雨的屋檐 点击阅读 祝天下的父亲们节日快乐！ 点击阅读 新娘都是天使，因为天使爱美丽 点击阅读 我唾弃你的坟墓 点击阅读 跨越古典与现代流行的钢琴王子 点击阅读 Pride and Prejudice–Smile 点击阅读"},{"title":"resource","date":"2017-03-12T12:01:15.000Z","updated":"2017-03-18T14:04:36.000Z","comments":true,"path":"resource/index.html","permalink":"https://git.oschina.net/chenxushan/chenxushan.git/resource/index.html","excerpt":"","text":"电子书资源 技术不断发展，知识不断更新，唯有不断的学习才能活得充实，各行各业都是如此；我认为比较好的电子书，基本是技术书和少许的其他领域的书。在这里分享给大家，但是要支持正版，可以购买电子版的正版； 链接：坚果云 算法学习网站 leecode geeksforgeeks 开发文档 PHP文档中文 PHP文档英文 Python文档 电子书目录可以使用Ctrl + F来检索。 沉浸式学习git 高效程序员的45个习惯：敏捷开发修炼之道 恰如其分的软件架构 设计模式之禅(第二版) 深入理解Java虚拟机 图解http 微服务设计 有生之年必看的101部电影 三体三部曲 algorithm android编程权威指南 css设计指南(第三版) Dive into Python function-swift-cn Html5秘籍 HTTP权威指南 ios编程(第四版) jQuery基础教程（第4版）-图灵程序设计丛书 leetcode题解 MySQL性能调优与架构设计 Netty in Action 算法大杂烩 php和mysql web开发(原书第4版) (开发人员专业技术丛书) Programming with Objective-C - v1.0 Ruby-on-Rails-Jiao-Cheng-Michael-Hartl Sprite Kit编程指南 Swift基础教程 (图灵程序设计丛书) - [美]皮特（Boisy G. Pitre） Vim实用技巧"},{"title":"","date":"2017-03-12T10:12:18.000Z","updated":"2017-03-12T10:12:18.000Z","comments":true,"path":"resume/index.html","permalink":"https://git.oschina.net/chenxushan/chenxushan.git/resume/index.html","excerpt":"","text":"陈旭山 body { background: #EEEEEE; font: 12px \"Times New Roman\", Times, sans-serif; line-height: 1.4; margin: 40px 0; } em { color: #999; } p { line-height: 1.4; } ul { margin-bottom: 0; } li { margin-bottom: 2px; } a { text-decoration: none; } #resume { margin: 0 auto; max-width: 600px; padding: 90px 100px 70px 100px; background: #fff; border: 1px solid #ccc; box-shadow: 2px 2px 4px #aaa; -webkit-box-shadow: 2px 2px 4px #aaa; } .coursesList { width: 28%; vertical-align: top; display: inline-block; } .largeFont { font-size: 20px; } .smallFont { font-size: 12px; } .sectionName { width: 18%; vertical-align: top; display: inline-block; } .sectionContent { width: 80%; vertical-align: top; display: inline-block } .sectionContent ul { padding-left: 20px; margin-top: 6px; list-style-type: circle; } .sectionContent .title { font-weight: bold; } .sectionContent .date { float: right; } .sectionContent .separator { height: 14px; } .sectionLine { border-style: dashed; border-width: 1px; border-color: #CFCFCF; margin-top: 13px; margin-bottom: 13px; } .divider { font-weight: bold; margin-left: 5px; margin-right: 5px; } .summary { margin-top: 6px; } .skillBlock { margin-bottom: 4px; } .head{ float:right; height:93px; width:82px; /*border-radius: 1;*/ margin-top: -92px; -moz-border-radius: 41px / 45px; -webkit-border-radius: 41px / 45px; border-radius: 41px / 45px; } .title1{ font-weight: bold; font-size: 13px; } /* Media Queries */ @media only screen and (max-width: 40em) { body { margin: 0; font-size: 14px; } #resume { margin: 0 auto; max-width: 600px; padding: 0.5em 1em; border: none; } .sectionContent { width: 100%; } .sectionContent .date { padding-right: 2em; } .sectionName { width: auto; } .largeFont { font-size: 20px; } .smallFont { font-size: 14px; } } @media print { #resume { margin: 0 auto; max-width: 600px; padding: 0px 0px; border: 0px; background: #fff; box-shadow: none; -webkit-box-shadow: none; } } 陈旭山 Email:344926445@qq.com | Phone:18896555121 | Address:江苏省苏州市 Blog :http://hillychen.github.io 简介 苏州大学 计算机软件工程专业 经历 苏州大学 2012-2016 获奖情况 大学获奖 学习优秀二等奖学金 2014-11-01 学习优秀二等奖学金 2015-11-01 苏州大学计算机学院科协优秀理事 2014-10-09 职位与锻炼 大学期间担任过班级副班长 计算机学院科技协会科研部部长 计算机学院科技协会理事长 大二大三在导师实验室进行专业学习锻炼 技能 Web Development: HTML, CSS, Javascript Program Language: C, C++, SQL, PHP, Python, Database: Mysql, SqlServer Operation Systems: windows, Mac OS, Linux(Ubuntu) Development Framework: Git/Svn, Laravel, Django, Jquery/D3.js/toDoT.js UI design: Sketch 项目经验 苏大计算机学院导师制平台微信公众号开发(Python) 益智积分管理系统(PHP)(http://www.yqbte.cn/) 基于APICloud跨平台校园信息平台APP开发(Html/Javascript/Css) 语言 English: CET4 CET6 实习工作经历 苏州畅达软件公司实习工作 2015-07--2015-11 中国银行苏州分行信息科技部 2016-07--2016-08 兴趣爱好 生活 [ 阅读，听音乐，看电影 ] 专业 [ 学习IT行业比较好的技术，开发工具 生命有限，学习无限，知识是无限的，但是最重要的就是保持着一颗对知识渴求的心态，学习方法 最重要 ] 座右铭 [ 不仅仅只有眼前的苟且，还有诗与远方 这世界没有末路，你也不曾孤独 ]"}],"posts":[{"title":"c/cpp学习笔记","slug":"c-cpp学习笔记","date":"2017-04-16T09:03:39.000Z","updated":"2017-04-16T09:19:51.000Z","comments":true,"path":"2017/04/16/c-cpp学习笔记/","link":"","permalink":"https://git.oschina.net/chenxushan/chenxushan.git/2017/04/16/c-cpp学习笔记/","excerpt":"","text":"从大学刚学习c/cpp以来，几年过去了，但是由于大学没有好好深入学习研究c/cpp以及算法，挺后悔的。所以奉劝计算机专业的学生，大学不应该过早步入各种开发的步调，而忽略c/cpp、算法、基础专业知识的学习。其实一开始，最重要的就是把基础打扎实了，编程的思维方式和动手能力很重要，如何将现实问题，通过算法建模转化为代码才是至关重要的，可以视为灵魂。所以我把自己学习的过程做记录，没事的时候仔细体会，别有一番风味，每次也会有不一样的体会。 指针 先以一段代码开始1234567891011121314151617181920212223242526272829303132333435363738394041424344#include &lt;stdio.h&gt;int main(int argc, char *argv[])&#123; // create two arrays we care about int ages[] = &#123;23, 43, 12, 89, 2&#125;; char *names[] = &#123; \"Alan\", \"Frank\", \"Mary\", \"John\", \"Lisa\" &#125;; // safely get the size of ages int count = sizeof(ages) / sizeof(int); int i = 0; // first way using indexing for(i = 0; i &lt; count; i++) &#123; printf(\"%s has %d years alive.\\n\", names[i], ages[i]); &#125; printf(\"---\\n\"); // setup the pointers to the start of the arrays int *cur_age = ages; char **cur_name = names; // second way using pointers for(i = 0; i &lt; count; i++) &#123; printf(\"%s is %d years old.\\n\", *(cur_name+i), *(cur_age+i)); &#125; printf(\"---\\n\"); // third way, pointers are just arrays for(i = 0; i &lt; count; i++) &#123; printf(\"%s is %d years old again.\\n\", cur_name[i], cur_age[i]); &#125; printf(\"---\\n\"); // fourth way with pointers in a stupid complex way for(cur_name = names, cur_age = ages; (cur_age - ages) &lt; count; cur_name++, cur_age++) &#123; printf(\"%s lived %d years so far.\\n\", *cur_name, *cur_age); &#125; return 0;&#125; 上面的代码很好的诠释了指正的工作原理，首先 在你的计算机中开辟一块内存。 将ages这个名字“指向”它的起始位置。 通过选取ages作为基址，并且获取位置为i的元素，来对内存块进行索引。 将ages+i处的元素转换成大小正确的有效的int，这样就返回了你想要的结果：下标i处的int。 指针仅仅是指向计算机中的某个地址，并带有类型限定符，所以你可以通过它得到正确大小的数据，指针的用途就是让你手动对内存块进行索引，一些情况下数组并不能做到。绝大多数情况中，你可能打算使用数组，但是一些处理原始内存块的情况，是指针的用武之地。指针向你提供了原始的、直接的内存块访问途径，让你能够处理它们。指针有四个最基本的操作： 向OS申请一块内存，并且用指针处理它。这包括字符串，和一些你从来没见过的东西，比如结构体。 通过指针向函数传递大块的内存（比如很大的结构体），这样不必把全部数据都传递进去。 获取函数的地址用于动态调用。 对一块内存做复杂的搜索，比如，转换网络套接字中的字节，或者解析文","categories":[{"name":"c/cpp","slug":"c-cpp","permalink":"https://git.oschina.net/chenxushan/chenxushan.git/categories/c-cpp/"}],"tags":[{"name":"c/cpp","slug":"c-cpp","permalink":"https://git.oschina.net/chenxushan/chenxushan.git/tags/c-cpp/"}],"keywords":[{"name":"c/cpp","slug":"c-cpp","permalink":"https://git.oschina.net/chenxushan/chenxushan.git/categories/c-cpp/"}]},{"title":"Hexo博客迁移部署到oschina(开源中国)&&codingNet(码市)","slug":"Hexo博客迁移部署到oschina-开源中国-coding-码云","date":"2017-04-08T16:14:29.000Z","updated":"2017-04-08T16:32:56.000Z","comments":true,"path":"2017/04/09/Hexo博客迁移部署到oschina-开源中国-coding-码云/","link":"","permalink":"https://git.oschina.net/chenxushan/chenxushan.git/2017/04/09/Hexo博客迁移部署到oschina-开源中国-coding-码云/","excerpt":"","text":"这两天突然发现github.io的pags服务挂掉了,导致博客登录不上，为了防止以后类似情况的发生，决定把博客部署到国内的一些托管平台，比如开源中国和码市。因为二者都支持项目开启pages服务，所以迁移起来很简单; step1、新建项目仓 到开源中国和码市申请账号登录新建项目 在新建项目的时候，对于pages项目，项目的名称一定要跟用户名一致，不然后面当博客源码推送到仓库上的时候，访问的时候会遇到静态资源都加载失败的情况； 把项目的pages功能开启，默认使用master分支； step2、修改修改hexo配置 打开博客根目录的_config.yml文件，找到： 123456789# URL## If your site is put in a subdirectory, set url as 'http://yoursite.com/child' and root as '/child/'#url: http://hillychen.github.io# Deployment## Docs: https://hexo.io/docs/deployment.htmldeploy: type: git repo: https://github.com/HillyChen/HillyChen.github.io branch: master 修改为(根据自己的仓库地址修改,其中增加了开源中国仓库地址和码云的仓库地址)： 123456789101112## If your site is put in a subdirectory, set url as 'http://yoursite.com/child' and root as '/child/'url: https://git.oschina.net/chenxushan/chenxushan.git#url: http://hillychen.github.io#url: https://git.coding.net/hilly/hilly.git# Deployment## Docs: https://hexo.io/docs/deployment.htmldeploy: type: git #repo: https://github.com/HillyChen/HillyChen.github.io repo: https://git.oschina.net/chenxushan/chenxushan.git #repo: https://git.coding.net/hilly/hilly.git branch: master 然后执行下面命令，以重新生成baidusitemap.xml。 1hexo generate -d","categories":[{"name":"博客迁移","slug":"博客迁移","permalink":"https://git.oschina.net/chenxushan/chenxushan.git/categories/博客迁移/"}],"tags":[{"name":"博客迁移","slug":"博客迁移","permalink":"https://git.oschina.net/chenxushan/chenxushan.git/tags/博客迁移/"}],"keywords":[{"name":"博客迁移","slug":"博客迁移","permalink":"https://git.oschina.net/chenxushan/chenxushan.git/categories/博客迁移/"}]},{"title":"计算机专业基础知识","slug":"计算机专业基础知识","date":"2017-04-07T15:12:31.000Z","updated":"2017-04-09T07:25:50.000Z","comments":true,"path":"2017/04/07/计算机专业基础知识/","link":"","permalink":"https://git.oschina.net/chenxushan/chenxushan.git/2017/04/07/计算机专业基础知识/","excerpt":"","text":"从事IT行业的人，可能有一部分人不是科班出身，或者即使是科班出身，可能对计算机的一些基础理论知识掌握的不是很牢靠，目前国内的计算机学院的专业课程中最重要的就是这四门：计算机组成、操作系统、数据结构、计算机网络。这四门也是目前计算机考研所涉及的，很重要，也很基础，虽然现在很多软件开发人员在工作中都不涉及这些知识，但是对于大公司来说，要想深入技术领域产品的研发，这些知识是很重要的，所以对于打算一直走技术路线的人来说，职业生涯很有必要抽出时间进行学习。八个字：“巩固、充实、深入、探索”。下面是整理的一些思维导图。 计算机组成 计算机系统概述 存储器 指令系统 中央处理器 总线 输入输出系统 操作系统 进程管理 处理机调度(CPU) 进程同步与互斥 死锁 内存管理 文件管理","categories":[{"name":"计算机基础","slug":"计算机基础","permalink":"https://git.oschina.net/chenxushan/chenxushan.git/categories/计算机基础/"}],"tags":[{"name":"计算机基础","slug":"计算机基础","permalink":"https://git.oschina.net/chenxushan/chenxushan.git/tags/计算机基础/"}],"keywords":[{"name":"计算机基础","slug":"计算机基础","permalink":"https://git.oschina.net/chenxushan/chenxushan.git/categories/计算机基础/"}]},{"title":"设计师和程序员必备：全世界最著名的 icons 网站","slug":"设计师和程序员必备：全世界最著名的-icons-网站","date":"2017-04-05T15:05:33.000Z","updated":"2017-04-05T15:27:02.000Z","comments":true,"path":"2017/04/05/设计师和程序员必备：全世界最著名的-icons-网站/","link":"","permalink":"https://git.oschina.net/chenxushan/chenxushan.git/2017/04/05/设计师和程序员必备：全世界最著名的-icons-网站/","excerpt":"","text":"对于网页开发者或者是设计师，素材收集是很重要的一个环节，特别是对于我这种有强迫症的人，做任何工作，都会提前收集很多的素材，对于一些图标、图片、色彩等的设计往往会占据很多时间，所以好的素材网站或者积累是很重要的，下面就是全球一些著名的icons网站，以后会更新设计相关的其他网站收集，比如色彩； 全世界最著名的 icons 网站 icons8:拥有 42,800 个免费图标，提供各个平台的基础图标与分类图标，其特色是大小和颜色随意自定义。 iconfinder:哥本哈根一个团队做的 icon 专业图标网站，拥有 1563889 个图标和37058图标集，是最专业的 icon 图标网站之一。 iconfont:国内功能很强大且图标内容很丰富的矢量图标库,提供矢量图标下载、在线存储、格式转换等功能，是阿里妈妈 MUX 组业余时间做的的矢量图标管理、交流平台。 Noun Project:国外三位设计师 2010 创建一个收录、并可免费使用高清符号图示的媒体库，包含25个语言版本，每天都有来自世界各地的设计师提交新 icon。 Flaticon:搜索海量扁平化图标，让图标搜索和转换变得非常简单和快速，并提供常用格式 SVG、PSD 源文件和 PNG 下载。 iconstore:Icon Store 提供高质量的免费的/收费的图标，包括卡通风格图标，极简主义图标，扁平化设计风格图标，手绘风格图标，像素风格图标等等，也包括各种类型主题图标，比如圣诞节主题图标，情人节主题图标，天气图标，办公室图标,动物图标，美容美发图标等等。 Material icons:Google 官方的扁平化图标手册，收集了多达10,000+图标，包括了网页，排版，音频，商务等等主题的绝大多数图标。格式包括SVG,PNG,ICON,以及字体图标，你可以在网页中轻松引用图标。 swifticons:覆盖 20 个大类包含 2264 个高质量图标 flat-icon-design:一个日本的免费扁平化设计图示网站，总数量大约有 500 个左右！网站提供的图示风格设计都很简约、可爱，非常适合使用于网页设计、应用程序开发或投影片报告，而且这些图示明确标示为「可以作为商业用途」，网站开放 Illustrator AI、EPS、JPEG、PNG 和 SVG 五种格式下载。 Font-Awesome:一套专门为 Twitter Boostrap 设计的图标字体库。这套图标字体集几乎囊括了网页中可能用到的所有图标，除了包括 Twitter Boostrap 的默认图标外，还有社交网络图标、Web 应用程序图标和编辑器图标等等，可以免费用于商业项目。 sketch:sketch 设计素材","categories":[{"name":"UI","slug":"UI","permalink":"https://git.oschina.net/chenxushan/chenxushan.git/categories/UI/"}],"tags":[{"name":"UI","slug":"UI","permalink":"https://git.oschina.net/chenxushan/chenxushan.git/tags/UI/"}],"keywords":[{"name":"UI","slug":"UI","permalink":"https://git.oschina.net/chenxushan/chenxushan.git/categories/UI/"}]},{"title":"学习vue.js实现的一个小demo","slug":"学习vue-js实现的一个小demo","date":"2017-03-18T14:18:13.000Z","updated":"2017-03-18T14:25:07.000Z","comments":true,"path":"2017/03/18/学习vue-js实现的一个小demo/","link":"","permalink":"https://git.oschina.net/chenxushan/chenxushan.git/2017/03/18/学习vue-js实现的一个小demo/","excerpt":"","text":"学习vue.js最好的方法，当然首要就是vue官方文档，作为一个由中国开发者开发的一个前端框架，目前github上的start数量已经四千多，所以还是比较强悍的，我在学习的时候，边看文档，便去实现一个特定场景的功能，就是对一个表格数据进行增、删、改、查、搜索;鄙人水平有限，仅供入门者交流学习，望大神别吐槽！哈哈！demo,点击预览 实现过程界面设计vue.js在本demo的核心代码实现","categories":[],"tags":[],"keywords":[]},{"title":"PHP学习总结","slug":"PHP学习总结","date":"2017-03-18T10:40:32.000Z","updated":"2017-03-19T15:06:02.000Z","comments":true,"path":"2017/03/18/PHP学习总结/","link":"","permalink":"https://git.oschina.net/chenxushan/chenxushan.git/2017/03/18/PHP学习总结/","excerpt":"","text":"知识在乎不断的积累和总结，好记性不如烂笔头.读各种书，以博客以记之，为了自己日后学习查阅，也可以和远方来的朋友分享交流。 PHP中的常用函数 其实学习PHP或者Python，最终要的一点就是要熟悉一些常用库或者函数，这样在应用的时候才能游刃有余，下面总结一下常用的函数查看数据类型 gettype(传入一个变量) 能够获得变量的类型 var_dump(传入一个变量) 输出变类型和值判断数据类型 is_int/bool/float/string/array/object/null/resource(资源)/scalar(标量)/numeric(是否为数值类型)/callable(是否为函数)1234$float = 88.8;$type = gettype($float);var_dump($float);echo $type; 强制类型转换 强制类型转换有三种方式： 用后面的三个函数可以完成类型转换，intval()、floatval()、strval() 变量前加上()里面写上类型，将它转换后赋值给其他变量 settype(变量，类型) 直接改变量本身 常量和变量常量 定义 define(常量名，常量值)；defined()函数来做安全机制系统的一些常量： 常量明 说明 常量明 说明 LINE 当前所在的行 FILE 当前文件在服务器的路径 FUNCTIOIN 当前函数名 CLASS 当前类名 METHOD 当前成员方法名 PHP_OS PHP运行的操作系统 PHP_VERSION 当前PHP的版本 TRAIT Trait 的名字,php5.4新加 DIR 文件所在的目录 NAMESPACE 当前命名空间的名称（区分大小写 123456define('MY_NAME','PHP');echo MY_NAME;//下面是错误的调用方式echo '我的名字是MY_NAME';//正确的调用方式该这么写echo '我的名字是' . MY_NAME; 变量 变变量其实就是——已声明的变量前，再上变量符 123456789$shu = 'biao';$biao = 'wo';$wo = 'test';$test = 'sina';$sina = 'zhongguo';$zhongguo = 'china';$china = '我爱你';//别运行，自己去推理一下代码。也写几个可变变量玩玩吧！echo $$$$$shu;(输出是zhongguo) PHP的外部变量是PHP 在使用过程中规定好的一些变量:应有场景：user.html 123456789101112&lt;html&gt; &lt;head&gt; &lt;/head&gt; &lt;body&gt; &lt;form action=\"reg.php\" method=\"get\"&gt; &lt;input type=\"text\" name=\"username\" /&gt; &lt;input type=\"password\" name=\"pwd\" /&gt; &lt;input type=\"submit\" value=\"提交\" /&gt; &lt;/form&gt; &lt;/body&gt;&lt;/html&gt; reg.php 12345678//$_GET后面加上中括号，将username作为字符串放在中括号里面，就得到了表单里面的&lt;input type=\"text\" name=\"username\" /&gt; 的值$u = $_GET['username'];$u = $_POST['username'];echo $u.'&lt;br /&gt;';//$_GET['pwd'] 得到表单&lt;input type=\"password\" name=\"pwd\" /&gt; 的值$passwd = $_GET['pwd'];echo $passwd.'&lt;br /&gt;'; 全局变量名 功能说明 全局变量名 功能说明 $_COOKIE 得到会话控制中cookie传值 $_SESSION 得到会话控制中session的值 $_FILES 得到文件上传的结果 $_GET 得到get传值的结果 $_POST 得到post传值的结果 $_REQUEST 即能得到get的传值结果，也能得到post传值的结果 一些常用的环境变量的键名和值对应的意思： 键名 含义 $_SERVER[“REQUEST_METHOD”] 请求当前PHP页面的方法 $_SERVER[“REQUEST_URI”] 请求的URI $_SERVER[“SERVER_SOFTWARE”] 用的是哪一种服务器 $_SERVER[“REMOTE_ADDR”] 客户的IP地址 $_SERVER[“SERVER_ADDR”] 当前服务器的IP地址 $_SERVER[“SCRIPT_FILENAME”] 当前请求文件的路径 $_SERVER[“HTTP_USER_AGENT”] 当前访问这个网址的电脑和浏览器的情况 $_SERVER[“HTTP_REFERER”] 上级来源（用户从哪个地址进入当前网页的） $_SERVER[“REQUEST_TIME”] 当前请求时间 变量引用(类似于C语言指正)12345678$fo = 5;//注意，加上了一个&amp;符哟$bar = &amp;$fo;$bar = 6;//$bar的结果为6echo $bar.'&lt;br /&gt;';//$fo的结果为6echo $fo.'&lt;br /&gt;'; 三元运算符 符号 说明 $x? 真代码段:假代码段 判断是否为真假 ? 真情况 : 假情况; ``（反引号） 反引号中间插代命令，执行系统命令，等价于shell_exec函数 @ 单行抑制错误，把这一行的错误不让它显示出来了，效率低不建议使用 =&gt; 数组下标访问符 -&gt; 对象访问符 instanceof 判断某个对象是否来自某个类，如果是的返回true，如果不是返回false 函数回调函数12345678910111213141516171819202122function woziji($one,$two,$func)&#123; //我规定：检查$func是否是函数，如果不是函数停止执行本段代码，返回false if(!is_callable($func))&#123; return false; &#125; //我把$one、$two相加，再把$one和$two传入$func这个函数中处理一次 //$func是一个变量函数，参见变量函数这一章 echo $one + $two + $func($one,$two);&#125;//我们定义几个函数试试function plusx2( $foo , $bar)&#123; $result = ($foo+$bar)*2; return $result;&#125;function jian( $x , $y )&#123; $result = $x - $y; return $result;&#125;//调用一下函数，woziji，向里面传入参数试试echo woziji(20,10,'plusx2');//将plusx2改成jian试试结果echo woziji(20,10,'jian'); 变量函数1234567891011function demo()&#123; echo '天王盖地虎';&#125;function test()&#123; echo '小鸡炖蘑菇';&#125;$fu = 'demo';//把$fu变为了demo,把demo后加上了一个括号，就执行函数了$fu();//把$fu的值改为test字符串再试试？ 匿名函数1234567891011121314151617181920212223//1.变量函数式的匿名函数$greet = function($name)&#123;echo $name.'，你好';&#125;;$greet('明天');$greet('PHP学院');//2.回调式的匿名函数function woziji($one,$two,$func)&#123; //我规定：检查$func是否是函数，如果不是函数停止执行本段代码，返回false if(!is_callable($func))&#123; return false; &#125; //我把$one、$two相加，再把$one和$two传入$func这个函数中处理一次 //$func是一个变量函数，参见变量函数这一章 echo $one + $two + $func($one,$two);&#125;woziji(20,30,function( $foo , $bar)&#123; $result = ($foo+$bar)*2; return $result; &#125;); 内部函数1234567891011121314151617&lt;?phpfunction foo()&#123; echo '我是函数foo哟，调一下我才会执行定义函数bar的过程&lt;br /&gt;'; function bar() &#123; echo '在foo函数内部有个函数叫bar函数&lt;br /&gt;'; &#125;&#125;//现在还不能调用bar()函数，因为它还不存在bar();foo();//现在可以调用bar()函数了，因为foo()函数的执行使得bar()函数变为已定义的函数bar();//再调一次foo()看看是不是会报错？foo();?&gt; 变量作用域 我们将函数体外的变量通过$GLOBALS拿到了函数体使用。所以，打破了函数外的变量不能在函数体内使用的限定。12345678$one = 10;function demo()&#123; $two = 100; $result = $two + $GLOBALS['one']; return $result;&#125;//你会发现结果变成了110echo demo(); 使用内置函数 主要掌握如何使用内置函数，就是会看PHP官方文档使用函数的重点是三块： 了解函数的功能，特别是常用函数的功能 了解函数的参数 了解函数的返回值针对上面的三块，讲解6个函数，这6个函数，概况了函数的基本用法的全部注意事项： 直接返回布尔型，如bool copy () 带有MIXED参数的函数如何调用。Mixed表示任何类型的数据。如Array_unshift() 参数中带有&amp;符的参数，一定要传一个变量做为参数。函数里面改变了他的值。 带有[]的参数，表示可选项。 带有…的参数，表示可以传任意多个参数。 带有callback的参数，表示回调函数。需要传一个函数进来。Array_map() 函数支持的版本你要了解 1.bool copy ( string $source , string $dest [, resource $context ]) 这个函数的功能为： 拷备一个文件返回值为为： bool型值，就是成功返回true，失败返回false参数为： 两个字符串的值，一个是copy的源文件，一个为目标文件。第三个参数可选的，不常用，我们不管它。12345$file = 'example.txt';$newfile = 'example.txt.bak';if (!copy($file, $newfile)) &#123; echo \"failed to copy $file...\\n\";&#125; 2.int array_unshift ( array &amp;$array , mixed $value1 [, mixed $… ] ) Mixed表示任何类型的数据。功能： 操作一个数组，向数组中之前插入其他类型的参数。返回值： int 类型，可能就是插入成功最后的个数参数： 第一个参数为&amp;符，也就是在操作的过程中，改变了第一个参数的值。引用传参。也就是操作这个数组，向这个数组中传入参数。会直接改变这个数组的值。第二个参数为mixed，因为数组可以存入多个不同的类型.mixed是指混合的意思。因此，mixed是指可传入任意类型。第三个数数加了中括号，我们所有遇到中括号的。都是指后面的参数可传，也可以不传。第四，最后还看到了三个…(省略号)。代表可以传入任意多个参数。1234567891011$queue = array(\"orange\", \"banana\");array_unshift($queue, \"apple\", \"raspberry\");print_r($queue);// The above example will output:// Array// (// [0] =&gt; apple// [1] =&gt; raspberry// [2] =&gt; orange// [3] =&gt; banana// ) 3、bool array_walk ( array &amp;$array , callable $callback [, mixed $userdata = NULL ] )功能：传入一个回调函数，将数组的原来的组操作，并且发生变化。返回值：bool 值 也就是意味着，提示成功或者失败参数：第一个参数是要操作的数组。第二个参数是callback 代表着可以传入函数或者匿名函数。12345678910111213141516171819202122232425$fruits = array(\"d\" =&gt; \"lemon\", \"a\" =&gt; \"orange\", \"b\" =&gt; \"banana\", \"c\" =&gt; \"apple\");function test_alter(&amp;$item1, $key, $prefix)&#123; $item1 = \"$prefix: $item1\";&#125;function test_print($item2, $key)&#123; echo \"$key. $item2&lt;br /&gt;\\n\";&#125;echo \"Before ...:\\n\";array_walk($fruits, 'test_print');array_walk($fruits, 'test_alter', 'fruit');echo \"... and after:\\n\";array_walk($fruits, 'test_print');// The above example will output:// Before ...:// d. lemon// a. orange// b. banana// c. apple// ... and after:// d. fruit: lemon// a. fruit: orange// b. fruit: banana// c. fruit: apple 文件包含函数 函数 包含失败 特点 Inlcude 返回一条警告 文件继续向下执行。通常用于动态包含 Require 一个致命的错 代码就不会继续向下执行。通常包含极为重要的文件，整个代码甭想执行 Include_once 返回一条警告 除了原有include的功能以外，它还会做once检测，如果文件曾经已经被被包含过，不再包含 Require_once 一个致命的错 除了原的功能一外，会做一次once检测，防止文件反复被包含 日期常用函数 在正式学习日期函数前大家要了解几个概念: 时区:1884年在华盛顿召开国际经度会议时，为了克服时间上的混乱，规定将全球划分为24个时区。在中国采用首都北京所在地东八区的时间为全国统一使用时间。 世界时:如果对国际上某一重大事情，用地方时间来记录，就会感到复杂不便．而且将来日子一长容易搞错。因此，天文学家就提出一个大家都能接受且又方便的记录方法，那就是以格林尼治（英国某地区）的地方时间为标准。 unix时间戳:从Unix纪元（1970 年 1月1日零时）开始到一个时间经过的秒数。时间函数有： 设置时区： date_default_timezone_get() date_default_timezone_set()123456//定义一下时区常量，以后你可以放到配置文件里define('TIME_ZONE','Asia/shanghai');//执行函数date_default_timezone_set(TIME_ZONE);echo date_default_timezone_get ();echo date('Y-m-d H:i:s'); time()获取当前的unix时间戳:time()获取当前的unix时间戳 getdate获取当前系统时间 12345678910111213141516171819202122232425262728$mytime= getdate()； print_r( $mytime)；// Array// (// [seconds] =&gt; 1 //秒// [minutes] =&gt; 10 //分钟// [hours] =&gt; 17 //小时// [mday] =&gt; 18 //日// [wday] =&gt; 0 //星期中的第几天// [mon] =&gt; 1 //月// [year] =&gt; 2015 //年// [yday] =&gt; 17 //年中的第几天// [weekday] =&gt; Sunday //星期// [month] =&gt; January //月份// [0] =&gt; 1421597401 //时间戳// )$mytime = getdate();echo \"年 :\".$mytime['year'].\"\\n\";echo \"月 :\".$mytime['mon'].\"\\n\";echo \"日 :\".$mytime['mday'].\"\\n\";echo \"时 :\".$mytime['hours'].\"\\n\";echo \"分 :\".$mytime['minutes'].\"\\n\";echo \"秒 :\".$mytime['seconds'].\"\\n\";echo \"一个小时中的第几钟 :\".$mytime['minutes'].\"\\n\";echo \"这是一分钟的第几秒 :\".$mytime['seconds'].\"\\n\";echo \"星期名称 :\".$mytime['weekday'].\"\\n\";echo \"月份名称 :\".$mytime['month'].\"\\n\";echo \"时间戳 :\".$mytime[0].\"\\n\"; 日期验证函数:bool checkdate ( int $month , int $day , int $year ) mktime()函数可以对一个日期和时间获得一个本地化时间戳:int mktime (int $hour [, int $minute [, int $second [, int $month [, int $day [. int$year [, int $.is_dstl.l } ] ] 31 ) 将英文文本的日期时间描述解析为 Unix 时间戳:int strtotime ( string $time [, int $now = time() ] ) 程序执行时间检测,microtime()这个函数，能够返回当前 Unix 时间戳和微秒数:mixed microtime ([ bool $get_as_float ] ) 字符串常用函数声明： 内容参考：《7天学会PHP》","categories":[{"name":"PHP","slug":"PHP","permalink":"https://git.oschina.net/chenxushan/chenxushan.git/categories/PHP/"}],"tags":[{"name":"PHP","slug":"PHP","permalink":"https://git.oschina.net/chenxushan/chenxushan.git/tags/PHP/"}],"keywords":[{"name":"PHP","slug":"PHP","permalink":"https://git.oschina.net/chenxushan/chenxushan.git/categories/PHP/"}]},{"title":"算法学习01","slug":"算法学习01","date":"2017-03-12T14:08:09.000Z","updated":"2017-03-12T14:38:17.000Z","comments":true,"path":"2017/03/12/算法学习01/","link":"","permalink":"https://git.oschina.net/chenxushan/chenxushan.git/2017/03/12/算法学习01/","excerpt":"","text":"","categories":[{"name":"algorithm","slug":"algorithm","permalink":"https://git.oschina.net/chenxushan/chenxushan.git/categories/algorithm/"}],"tags":[{"name":"algorithm","slug":"algorithm","permalink":"https://git.oschina.net/chenxushan/chenxushan.git/tags/algorithm/"}],"keywords":[{"name":"algorithm","slug":"algorithm","permalink":"https://git.oschina.net/chenxushan/chenxushan.git/categories/algorithm/"}]},{"title":"javascript学习总结","slug":"javascript学习总结","date":"2017-03-12T14:06:51.000Z","updated":"2017-03-16T12:56:34.000Z","comments":true,"path":"2017/03/12/javascript学习总结/","link":"","permalink":"https://git.oschina.net/chenxushan/chenxushan.git/2017/03/12/javascript学习总结/","excerpt":"","text":"","categories":[{"name":"javascript","slug":"javascript","permalink":"https://git.oschina.net/chenxushan/chenxushan.git/categories/javascript/"}],"tags":[{"name":"javascript","slug":"javascript","permalink":"https://git.oschina.net/chenxushan/chenxushan.git/tags/javascript/"}],"keywords":[{"name":"javascript","slug":"javascript","permalink":"https://git.oschina.net/chenxushan/chenxushan.git/categories/javascript/"}]},{"title":"Git总结","slug":"Git总结","date":"2017-03-12T14:06:27.000Z","updated":"2017-03-12T14:38:11.000Z","comments":true,"path":"2017/03/12/Git总结/","link":"","permalink":"https://git.oschina.net/chenxushan/chenxushan.git/2017/03/12/Git总结/","excerpt":"","text":"","categories":[{"name":"git","slug":"git","permalink":"https://git.oschina.net/chenxushan/chenxushan.git/categories/git/"}],"tags":[{"name":"git","slug":"git","permalink":"https://git.oschina.net/chenxushan/chenxushan.git/tags/git/"}],"keywords":[{"name":"git","slug":"git","permalink":"https://git.oschina.net/chenxushan/chenxushan.git/categories/git/"}]},{"title":"Mysql学习总结","slug":"Mysql学习总结","date":"2017-03-12T14:05:44.000Z","updated":"2017-03-18T11:10:57.000Z","comments":true,"path":"2017/03/12/Mysql学习总结/","link":"","permalink":"https://git.oschina.net/chenxushan/chenxushan.git/2017/03/12/Mysql学习总结/","excerpt":"","text":"知识在乎不断的积累和总结，好记性不如烂笔头.读各种书，以博客以记之，为了自己日后学习查阅，也可以和远方来的朋友分享交流。 简介 MySQL 是一个关系数据库系统，支持 SQL 查询语言。 MySQL 可以是免费的，你不需要为它付费。 MySQL 系统的速度非常快，同样它的性能也是十分优良的。 MySQL 是一个管理简捷的数据库，它没有庞大而臃肿的可视化管理工具。 基础语法01创建一个表格1234567CREATE TABLE teacher(id TINYINT UNSIGNED NOT NULL,name CHAR(16) NOT NULL,tele NUMERIC(8),sex ENUM(\"F\",\"M\") DEFAULT \"M\") 由上面这个例子可以知道，创建列类型的语法是: col_name col_type [col_attributes][general_attributes] col_name 列的名字 col_type 列类型，控制存储在列中的数据类型 col_attributes 专用属性，只能应用于制定列，例如，我们还不知道的 BINARY。 如果你使用专用属性，必须在列的类型之后，列的通用属性之前。 general_attributes 通用属性，可以应用在出少数列的任意列，例如上面提到了 NULL、 NOT NULL、和 DEFAULT。 MySQL 的数字列类型","categories":[{"name":"Mysql","slug":"Mysql","permalink":"https://git.oschina.net/chenxushan/chenxushan.git/categories/Mysql/"}],"tags":[{"name":"Mysql","slug":"Mysql","permalink":"https://git.oschina.net/chenxushan/chenxushan.git/tags/Mysql/"}],"keywords":[{"name":"Mysql","slug":"Mysql","permalink":"https://git.oschina.net/chenxushan/chenxushan.git/categories/Mysql/"}]},{"title":"java学习","slug":"Java","date":"2017-03-12T10:00:35.000Z","updated":"2017-03-12T14:10:59.000Z","comments":true,"path":"2017/03/12/Java/","link":"","permalink":"https://git.oschina.net/chenxushan/chenxushan.git/2017/03/12/Java/","excerpt":"","text":"","categories":[{"name":"java","slug":"java","permalink":"https://git.oschina.net/chenxushan/chenxushan.git/categories/java/"}],"tags":[{"name":"java","slug":"java","permalink":"https://git.oschina.net/chenxushan/chenxushan.git/tags/java/"}],"keywords":[{"name":"java","slug":"java","permalink":"https://git.oschina.net/chenxushan/chenxushan.git/categories/java/"}]},{"title":"Hello World","slug":"hello-world","date":"2017-03-12T06:13:43.000Z","updated":"2017-03-12T06:13:43.000Z","comments":true,"path":"2017/03/12/hello-world/","link":"","permalink":"https://git.oschina.net/chenxushan/chenxushan.git/2017/03/12/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[],"keywords":[]}]}